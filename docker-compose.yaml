version: '3'

services:
  cadvisor:
      image: gcr.io/cadvisor/cadvisor:v0.47.1
      container_name: cadvisor_container
      platform: linux/aarch64
      ports:
        - "8080:8080"
      volumes:
        - "/:/rootfs:ro"
        - "/var/run:/var/run:ro"
        - "/sys:/sys:ro"
        - "/var/lib/docker/:/var/lib/docker:ro"
        - "/dev/disk/:/dev/disk:ro"
      networks:
      - example-network  
      
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    restart: unless-stopped
    depends_on:
      - cadvisor
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus.yml:/etc/prometheus/prometheus-scrape-config.yaml
    # command:
    #   - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - example-network


  grafana:
    image: grafana/grafana
    container_name: grafana_container
    restart: unless-stopped
    ports:
       - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    env_file:
      - ./monitoring/grafana/config.monitoring
    networks:
      - example-network

  
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter_container
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - example-network     

  nginx:
    image: nginx:latest
    container_name: nginx_container
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro 
    networks:
      - example-network      


networks:
  example-network:
    name: example-network
    driver: bridge
    # external: true

